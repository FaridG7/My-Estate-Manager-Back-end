let jwt;_118‍.x([["authenticateToken",()=>authenticateToken]]);_118‍.w("jsonwebtoken-as-promised",[["default",["jwt"],function(v){jwt=v}]]);const pgp = require("pg-promise")();
const db = pgp({
  host: "localhost",
  port: 5432,
  database: "myestatemanager",
  user: "postgres",
  password: "farid.G1382",
});

// import { queries } from "./queries.js";
require("dotenv").config();


       async function authenticateToken(req, res, next) {
  try {
    const authHeader = req.headers["authorization"];
    const token = authHeader && authHeader.split(" ")[1];
    if (!token) return res.status(400).send("bad request");
    const user = await jwt.verify(token, process.env.ACCESS_TOKEN_SECRET);
    _118‍.g.console.log("token: ", token, " user: " , user)
    if (user) {
      req.user = user;
      return next();
    }
    return res.status(404).send("The token is invalid");
  } catch (error) {
    _118‍.g.console.error(error);
    return res.status(500).send("Internal Error");
  }
}
