let db,queries;_c25‍.x([["getPeople",()=>getPeople],["getOwners",()=>getOwners],["getBuyers",()=>getBuyers],["getRenters",()=>getRenters],["getPerson",()=>getPerson],["updatePerson",()=>updatePerson]]);_c25‍.w("../../postgresDB/db.js",[["default",["db"],function(v){db=v}]]);_c25‍.w("./queries.js",[["default",["queries"],function(v){queries=v}]]);


       async function getPeople(req, res) {
  try {
    const people = await db.any(queries.getPeople);
    res.json(people);
  } catch (error) {
    _c25‍.g.console.error("error: ", error);
    return res.status(500).send("Internal Error");
  }
}
       async function getOwners(req, res) {
  try {
    const owners = await db.any(queries.getOwners);
    res.json(owners);
  } catch (error) {
    _c25‍.g.console.error("error: ", error);
    return res.status(500).send("Internal Error");
  }
}
       async function getBuyers(req, res) {
  try {
    const buyers = await db.any(queries.getBuyers);
    res.json(buyers);
  } catch (error) {
    _c25‍.g.console.error("error: ", error);
    return res.status(500).send("Internal Error");
  }
}
       async function getRenters(req, res) {
  try {
    const renters = await db.any(queries.getRenters);
    res.json(renters);
  } catch (error) {
    _c25‍.g.console.error("error: ", error);
    return res.status(500).send("Internal Error");
  }
}

       async function getPerson(req, res) {
  try {
    const person = await db.one(queries.getPerson);
    res.json(person);
  } catch (error) {
    _c25‍.g.console.error("error: ", error);
    return res.status(404).send("Not Found");
  }
}

       async function updatePerson(req, res) {
  const id = Number(req.params.id);
  const {first_name, last_name, phone_number, meli_code} = req.body
  if(!id || !first_name || !last_name || !meli_code || !phone_number) return res.status(404).send("Bad Request");
  try {
    const renters = await db.none(queries.getRenters, [id, first_name, last_name, phone_number, meli_code]);
    res.json(renters);
  } catch (error) {
    _c25‍.g.console.error("error: ", error);
    return res.status(500).send("Internal Error");
  }
}